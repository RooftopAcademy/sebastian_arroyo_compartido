{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAgC;AACjB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA,oDAAoD,gDAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzCgC;AACO;AACM;AACI;AACJ;AAC9B;AACf;AACA;AACA,4BAA4B,wDAAM;AAClC;AACA,uBAAuB,wDAAM;AAC7B,0BAA0B,2DAAS;AACnC,0BAA0B,2DAAS;AACnC,4BAA4B,6DAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gDAAO;AAC3D;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpCe;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACdA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0B;AACM;AACjB;AACf;AACA,2BAA2B,gDAAO;AAClC,wBAAwB,6CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClCe;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLe;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJe;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACLA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC4C;AACN;AACvB;AACf;AACA;AACA,+BAA+B,0DAAQ;AACvC;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClD4C;AACE;AACF;AACM;AACU;AAC7C;AACf;AACA;AACA,gBAAgB,0DAAQ;AACxB,sBAAsB,0DAAQ;AAC9B,0BAA0B,6DAAW;AACrC,sBAAsB,0DAAQ;AAC9B,8BAA8B,kEAAgB;AAC9C,qBAAqB,2DAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnBe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,kBAAkB,aAAa;AAC/B,mBAAmB,cAAc;AACjC,kBAAkB,cAAc;AAChC;AACA;AACA,sBAAsB;AACtB;AACA,6CAA6C,WAAW;AACxD;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3Je;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,cAAc;AAC1F;AACA,wCAAwC,aAAa;AACrD,qBAAqB,cAAc;AACnC,2BAA2B,cAAc;AACzC;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtFe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;UCtFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACyD;AAClB;AACvC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,yDAAK;AACzB,2BAA2B,oEAAY;AACvC;AACA;AACA,CAAC;AACD","sources":["webpack://sebastian_arroyo_compartido/./src/classModel/Cart.ts","webpack://sebastian_arroyo_compartido/./src/classModel/Catalog.ts","webpack://sebastian_arroyo_compartido/./src/classModel/Product.ts","webpack://sebastian_arroyo_compartido/./src/classModel/Store.ts","webpack://sebastian_arroyo_compartido/./src/classModel/sortable/IdSort.ts","webpack://sebastian_arroyo_compartido/./src/classModel/sortable/PriceSort.ts","webpack://sebastian_arroyo_compartido/./src/classModel/sortable/ReverseSort.ts","webpack://sebastian_arroyo_compartido/./src/classModel/sortable/StockSort.ts","webpack://sebastian_arroyo_compartido/./src/pageController/PageRenderer.ts","webpack://sebastian_arroyo_compartido/./src/pageController/PageRouter.ts","webpack://sebastian_arroyo_compartido/./src/pageView/CartPage.ts","webpack://sebastian_arroyo_compartido/./src/pageView/ErrorPage.ts","webpack://sebastian_arroyo_compartido/./src/pageView/HomePage.ts","webpack://sebastian_arroyo_compartido/./src/pageView/ProductPage.ts","webpack://sebastian_arroyo_compartido/./src/pageView/RegistrationPage.ts","webpack://sebastian_arroyo_compartido/webpack/bootstrap","webpack://sebastian_arroyo_compartido/webpack/runtime/define property getters","webpack://sebastian_arroyo_compartido/webpack/runtime/hasOwnProperty shorthand","webpack://sebastian_arroyo_compartido/webpack/runtime/make namespace object","webpack://sebastian_arroyo_compartido/./src/App.ts"],"sourcesContent":["import Product from \"./Product\";\r\nexport default class Cart {\r\n    constructor() {\r\n        this.products = [];\r\n        this.counter = 0;\r\n        this.productsId = new Set();\r\n    }\r\n    pushProduct(product) {\r\n        if (!this.productsId.has(product.id)) {\r\n            this.products.push(product);\r\n        }\r\n        product.qtyRequested += 1;\r\n        this.productsId.add(product.id);\r\n    }\r\n    addProduct(product) {\r\n        if (product.stock > 0) {\r\n            this.counter += 1;\r\n            product.stock -= 1;\r\n            this.pushProduct(product);\r\n        }\r\n        else {\r\n            console.log(`Product ${product.name} is out of stock.`);\r\n        }\r\n    }\r\n    findById(id) {\r\n        let product = this.products.find((product) => product.id == id);\r\n        return product != undefined ? product : new Product();\r\n    }\r\n    removeCartProduct(id) {\r\n        let productToRemove = this.findById(id);\r\n        this.counter -= productToRemove.qtyRequested;\r\n        productToRemove.stock += productToRemove.qtyRequested;\r\n        productToRemove.qtyRequested = 0;\r\n        this.products = this.products.filter((product) => {\r\n            return product.id != id;\r\n        });\r\n        this.productsId.delete(id);\r\n    }\r\n    getProducts() {\r\n        return this.products;\r\n    }\r\n}\r\n","import Product from \"./Product\";\r\nimport IdSort from \"./sortable/IdSort\";\r\nimport PriceSort from \"./sortable/PriceSort\";\r\nimport ReverseSort from \"./sortable/ReverseSort\";\r\nimport StockSort from \"./sortable/StockSort\";\r\nexport default class Catalog {\r\n    constructor() {\r\n        this.products = [];\r\n        this.sortable = new IdSort();\r\n        this.sorts = {\r\n            \"id-sort\": IdSort,\r\n            \"price-sort\": PriceSort,\r\n            \"stock-sort\": StockSort,\r\n            \"reverse-sort\": ReverseSort\r\n        };\r\n    }\r\n    sortProducts(sortType) {\r\n        this.sortable = new this.sorts[sortType]();\r\n        this.products = this.sortable.sort(this.products);\r\n    }\r\n    add(product) {\r\n        this.products.push(product);\r\n    }\r\n    //If it doesnt find a product that matches the id , returns an empty product (null object)\r\n    findById(id) {\r\n        let product = this.products.find((product) => product.id == id);\r\n        return product != undefined ? product : new Product();\r\n    }\r\n    exportRandomSliderProducts(n) {\r\n        let sliderProducts = [];\r\n        for (let i = 0; i < n; i++) {\r\n            //adds random products from the catalog n times\r\n            sliderProducts.push(this.products[Math.floor(Math.random() * this.products.length)]);\r\n        }\r\n        return sliderProducts;\r\n    }\r\n}\r\n","export default class Product {\r\n    /*constructor(public name: string = \"\", public id: number = 0, public price: number = 0, public image: string = \"\", public stock: number = 0) {\r\n    }*/\r\n    constructor() {\r\n        this.name = \"\";\r\n        this.id = 0;\r\n        this.price = 0;\r\n        this.stock = 0;\r\n        this.image = \"\";\r\n        this.qtyRequested = 0;\r\n    }\r\n    hasStock() {\r\n        return this.stock > 0;\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport Cart from './Cart';\r\nimport Catalog from './Catalog';\r\nexport default class Store {\r\n    constructor() {\r\n        this.catalog = new Catalog;\r\n        this.cart = new Cart;\r\n    }\r\n    fetchProductsFromApi() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const jsonUrl = 'https://my-json-server.typicode.com/RooftopAcademy/sebastian_arroyo_compartido/products';\r\n            try {\r\n                const response = yield fetch(jsonUrl);\r\n                const products = yield response.json(); //Promise<any>\r\n                products.forEach(p => p.qtyRequested = 0);\r\n                this.catalog.products = products;\r\n                console.log(\"Product Data Fetched\");\r\n            }\r\n            catch (err) {\r\n                console.log('Fetch failed ', err);\r\n            }\r\n        });\r\n    }\r\n    exportProducts() {\r\n        return this.catalog.products;\r\n    }\r\n}\r\n","export default class IdSort {\r\n    sort(products) {\r\n        products.sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0));\r\n        return products;\r\n    }\r\n}\r\n","export default class PriceSort {\r\n    sort(products) {\r\n        products.sort((a, b) => (a.price > b.price) ? 1 : ((b.price > a.price) ? -1 : 0));\r\n        return products;\r\n    }\r\n}\r\n","export default class ReverseSort {\r\n    sort(products) {\r\n        return products.reverse();\r\n    }\r\n}\r\n","export default class StockSort {\r\n    sort(products) {\r\n        products.sort((a, b) => (a.stock > b.stock) ? 1 : ((b.stock > a.stock) ? -1 : 0));\r\n        return products;\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport HomePage from \"../pageView/HomePage\";\r\nimport PageRouter from \"./PageRouter\";\r\nexport default class PageRenderer {\r\n    constructor(document, store) {\r\n        this.document = document;\r\n        this.currentPage = new HomePage(this);\r\n        this.store = store;\r\n        this.pageRouter = new PageRouter();\r\n    }\r\n    fetchStoreProducts() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.store.fetchProductsFromApi();\r\n            //waits for the fetching to end to render Homepage when you first load the webpage\r\n            this.renderHomePage();\r\n        });\r\n    }\r\n    changePage(newPagePath) {\r\n        this.currentPage = this.pageRouter.getPage(newPagePath, this);\r\n    }\r\n    getProductsCatalog() {\r\n        return this.store.catalog;\r\n    }\r\n    renderHomePage() {\r\n        let mainContainer = this.document.getElementById('main-container');\r\n        mainContainer.innerHTML = this.currentPage.render();\r\n        this.currentPage.loadEventBehavior();\r\n    }\r\n    renderPages() {\r\n        let mainContainer = this.document.getElementById('main-container');\r\n        window.addEventListener('hashchange', (e) => {\r\n            const hashPath = window.location.hash;\r\n            this.changePage(hashPath);\r\n            mainContainer.innerHTML = this.currentPage.render();\r\n            this.currentPage.loadEventBehavior();\r\n        });\r\n    }\r\n    updatePage() {\r\n        let mainContainer = this.document.getElementById('main-container');\r\n        mainContainer.innerHTML = this.currentPage.render();\r\n        this.currentPage.loadEventBehavior();\r\n    }\r\n}\r\n","import CartPage from \"../pageView/CartPage\";\r\nimport ErrorPage from \"../pageView/ErrorPage\";\r\nimport HomePage from \"../pageView/HomePage\";\r\nimport ProductPage from \"../pageView/ProductPage\";\r\nimport RegistrationPage from \"../pageView/RegistrationPage\";\r\nexport default class PageRouter {\r\n    constructor() {\r\n        this.paths = {\r\n            \"\": HomePage,\r\n            \"#/home\": HomePage,\r\n            \"#/products\": ProductPage,\r\n            \"#/cart\": CartPage,\r\n            \"#/registration\": RegistrationPage,\r\n            \"#/404\": ErrorPage\r\n        };\r\n    }\r\n    getPage(path, controller) {\r\n        return new (this.paths[path])(controller);\r\n    }\r\n}\r\n","export default class CartPage {\r\n    constructor(controller) {\r\n        this.content = this.baseHtmlView();\r\n        this.pageRenderer = controller;\r\n    }\r\n    baseHtmlView() {\r\n        return `\r\n        <div class = \"cart-container d-flex space-evenly\" id = \"cart\">\r\n            <div class = \"product-cart-section\" >\r\n            <table class = \"product-cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Product Name</th>\r\n                        <th>Price</th>\r\n                        <th>Stock</th>\r\n                        <th>Quantity</th>\r\n                        <th>Subtotal</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = \"product-cart-section-body\">\r\n                    \r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n    cartItemView(product) {\r\n        return `\r\n        <tr>\r\n            <td>${product.id}</td>\r\n            <td>${product.name}</td>\r\n            <td>$${product.price}</td>\r\n            <td>${product.stock}</td>\r\n            <td>\r\n                <div class = \"d-flex space-between\" >\r\n                    ${product.qtyRequested}\r\n                    <div>\r\n                        <button data-id = \"${product.id}\" class = \"plus-button\">\r\n                            <i class=\"fas fa-plus\"></i>\r\n                        </button>\r\n                        <button data-id = \"${product.id}\" class = \"minus-button\">\r\n                            <i class=\"fas fa-minus\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>$${product.qtyRequested * product.price}</td>\r\n            <td>\r\n                <div class = \"d-flex space-evenly\">\r\n                    <button data-id = \"${product.id}\" class = \"trash-button\">\r\n                        <i class=\"far fa-trash-alt fa-2x\"></i>\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        `;\r\n    }\r\n    cartItemTotalView() {\r\n        let products = this.pageRenderer.store.cart.getProducts();\r\n        let totalPrice = 0;\r\n        let cartCounter = this.pageRenderer.store.cart.counter;\r\n        products.forEach(p => {\r\n            totalPrice += p.qtyRequested * p.price;\r\n        });\r\n        return `\r\n        <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>${cartCounter}</td>\r\n            <td>$${totalPrice}</td>\r\n            <td>Buy</td>\r\n        </tr>\r\n        `;\r\n    }\r\n    renderCartItem(nodeHtml) {\r\n        this.pageRenderer.store.cart.getProducts().forEach((p) => nodeHtml.insertAdjacentHTML(\"beforeend\", this.cartItemView(p)));\r\n    }\r\n    renderCartItemTotal(nodeHtml) {\r\n        nodeHtml.insertAdjacentHTML(\"beforeend\", this.cartItemTotalView());\r\n    }\r\n    renderCartItemList() {\r\n        let cartProductsSection = document.getElementById(\"product-cart-section-body\");\r\n        this.renderCartItem(cartProductsSection);\r\n        this.renderCartItemTotal(cartProductsSection);\r\n    }\r\n    plusButtonBehavior(button, cartNotification) {\r\n        let id = button.dataset.id;\r\n        let cart = this.pageRenderer.store.cart;\r\n        let catalog = this.pageRenderer.getProductsCatalog();\r\n        let product = catalog.findById(+id);\r\n        if (product.stock > 0) {\r\n            cart.counter += 1;\r\n            product.stock -= 1;\r\n            product.qtyRequested += 1;\r\n        }\r\n        cartNotification.innerHTML = cart.counter.toString();\r\n    }\r\n    minusButtonBehavior(button, cartNotification) {\r\n        let id = button.dataset.id;\r\n        let cart = this.pageRenderer.store.cart;\r\n        let catalog = this.pageRenderer.getProductsCatalog();\r\n        let product = catalog.findById(+id);\r\n        if (cart.counter > 0 && product.qtyRequested > 0) {\r\n            cart.counter -= 1;\r\n            product.stock += 1;\r\n            product.qtyRequested -= 1;\r\n        }\r\n        cartNotification.innerHTML = cart.counter.toString();\r\n    }\r\n    trashButtonBehavior(button, cartNotification) {\r\n        let id = button.dataset.id;\r\n        let cart = this.pageRenderer.store.cart;\r\n        cart.removeCartProduct(+id);\r\n        cartNotification.innerHTML = cart.counter.toString();\r\n    }\r\n    /*\r\n    Updates the current page by re-rendering trough the PageRenderer class\r\n    */\r\n    updatePage() {\r\n        this.content = this.baseHtmlView();\r\n        this.pageRenderer.updatePage();\r\n    }\r\n    productsButton(buttons) {\r\n        let cartNotification = this.pageRenderer.document.getElementById('product-counter');\r\n        buttons.forEach(button => {\r\n            button.addEventListener('click', () => {\r\n                /*Refactor ifs / switch with enum or map later*/\r\n                if (button.className == \"plus-button\")\r\n                    this.plusButtonBehavior(button, cartNotification);\r\n                else if (button.className == \"minus-button\")\r\n                    this.minusButtonBehavior(button, cartNotification);\r\n                else\r\n                    this.trashButtonBehavior(button, cartNotification);\r\n                this.updatePage();\r\n            });\r\n        });\r\n    }\r\n    loadButtonsBehavior() {\r\n        let minusButtons = Array.from(this.pageRenderer.document.getElementsByClassName(\"minus-button\"));\r\n        let plusButtons = Array.from(this.pageRenderer.document.getElementsByClassName(\"plus-button\"));\r\n        let trashButtons = Array.from(this.pageRenderer.document.getElementsByClassName(\"trash-button\"));\r\n        let buttons = [...minusButtons, ...plusButtons, ...trashButtons];\r\n        this.productsButton(buttons);\r\n    }\r\n    render() {\r\n        return this.content;\r\n    }\r\n    loadEventBehavior() {\r\n        this.renderCartItemList();\r\n        this.loadButtonsBehavior();\r\n    }\r\n}\r\n","export default class ErrorPage {\r\n    constructor(controller) {\r\n        this.content = \"404 ERROR\";\r\n        this.controller = controller;\r\n    }\r\n    render() {\r\n        return this.content;\r\n    }\r\n    loadEventBehavior() {\r\n    }\r\n}\r\n","export default class HomePage {\r\n    constructor(pageRenderer) {\r\n        this.content = this.baseHtmlView();\r\n        ;\r\n        this.pageRenderer = pageRenderer;\r\n    }\r\n    baseHtmlView() {\r\n        return `\r\n        <div class = \"d-flex flex-column align-items-center\">\r\n            <h1 class = \"homepage-title\">Our Products:</h1>\r\n            <div class = \"slide-container d-flex\" >\r\n                <button data-id = \"-1\" class=\"previous\" >&laquo;</button>\r\n                <div class = \"slide-product-container\" id = \"slide-product-container\"></div>\r\n                <button data-id = \"1\" class=\"next\" >&raquo;</button>\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n    productSliderView(product) {\r\n        return `\r\n        <div class = \"slide-product fade\">\r\n            <img class = \"slide-product-img\" src = ${product.image}>\r\n        </div>\r\n        `;\r\n    }\r\n    renderProduct(product, slideProductContainer) {\r\n        slideProductContainer.insertAdjacentHTML(\"beforeend\", this.productSliderView(product));\r\n    }\r\n    renderSliderProducts() {\r\n        let slideProductContainer = this.pageRenderer.document.getElementById(\"slide-product-container\");\r\n        //Renders 5 products \r\n        let sliderProducts = this.pageRenderer.store.catalog.exportRandomSliderProducts(5);\r\n        sliderProducts.forEach((product) => {\r\n            this.renderProduct(product, slideProductContainer);\r\n        });\r\n    }\r\n    render() {\r\n        return this.content;\r\n    }\r\n    sliderButton(n, sliderIndex, sliderLength) {\r\n        sliderIndex += n;\r\n        if (sliderIndex > sliderLength)\r\n            sliderIndex = 1;\r\n        if (sliderIndex < 1)\r\n            sliderIndex = sliderLength;\r\n        return sliderIndex;\r\n    }\r\n    sliderBehavior() {\r\n        let sliderIndex = 1;\r\n        let sliderProducts = Array.from(this.pageRenderer.document.getElementsByClassName(\"slide-product\"));\r\n        //Renders first slider image\r\n        sliderProducts[0].style.display = \"block\";\r\n        let previousButtons = Array.from(this.pageRenderer.document.getElementsByClassName(\"previous\"));\r\n        let nextButtons = Array.from(this.pageRenderer.document.getElementsByClassName(\"next\"));\r\n        let sliderButtons = [...previousButtons, ...nextButtons];\r\n        sliderButtons.forEach(button => {\r\n            button.addEventListener(\"click\", () => {\r\n                let id = button.dataset.id;\r\n                sliderIndex = this.sliderButton(+id, sliderIndex, sliderProducts.length);\r\n                for (let i = 0; i < sliderProducts.length; i++) {\r\n                    sliderProducts[i].style.display = \"none\";\r\n                }\r\n                sliderProducts[sliderIndex - 1].style.display = \"block\";\r\n                console.log(\"sliderInder: \" + sliderIndex);\r\n            });\r\n        });\r\n    }\r\n    loadEventBehavior() {\r\n        this.renderSliderProducts();\r\n        this.sliderBehavior();\r\n    }\r\n}\r\n","export default class ProductPage {\r\n    constructor(controller) {\r\n        this.content = this.baseHtmlView();\r\n        this.pageRenderer = controller;\r\n    }\r\n    render() {\r\n        return this.content;\r\n    }\r\n    baseHtmlView() {\r\n        return `\r\n        <div class = \" d-flex flex-column\">\r\n            <div class = \"product-filter d-flex\" >\r\n                <p>Sort By: </p>\r\n                <button data-id = \"id-sort\" class = \"sort-button\">Id</button>\r\n                <button data-id = \"price-sort\" class = \"sort-button\" >Price</button>\r\n                <button data-id = \"stock-sort\" class = \"sort-button\" >Stock</button>\r\n                <button data-id = \"reverse-sort\" class = \"sort-button\" >Reverse</button>\r\n            </div>\r\n\r\n            <div class=\"catalog d-flex wrap\">\r\n\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n    productItemView(product) {\r\n        return `\r\n        <div class = \"product-item d-flex\" style = \"background-image: url(${product.image})\">\r\n            <div class = \"detail-text\">\r\n                <h4 class=\"gfx-title\">${product.name}</h3>\r\n                <p>${product.price}$</p>\r\n                <p>Stock:${product.stock}</p>\r\n            </div>\r\n            <button data-id=\"${product.id}\" class=\"product-button\">Add To Cart</button>\r\n        </div>\r\n        `;\r\n    }\r\n    renderProducts(nodeHtml) {\r\n        this.pageRenderer.store.exportProducts().forEach((p) => nodeHtml.insertAdjacentHTML(\"beforeend\", this.productItemView(p)));\r\n    }\r\n    renderProductList() {\r\n        Array.from(this.pageRenderer.document.getElementsByClassName(\"catalog\"))\r\n            .forEach((element) => {\r\n            this.renderProducts(element);\r\n        });\r\n    }\r\n    updatePage() {\r\n        this.content = this.baseHtmlView();\r\n        this.pageRenderer.updatePage();\r\n    }\r\n    sortProductList() {\r\n        let sortButtons = Array.from(this.pageRenderer.document.getElementsByClassName('sort-button'));\r\n        sortButtons.forEach((button) => {\r\n            button.addEventListener('click', () => {\r\n                let sortType = button.dataset.id;\r\n                console.log(sortType);\r\n                let catalog = this.pageRenderer.getProductsCatalog();\r\n                catalog.sortProducts(sortType);\r\n                console.log(catalog.products);\r\n                this.updatePage();\r\n            });\r\n        });\r\n    }\r\n    addToCartNotification() {\r\n        //holds all add to cart buttons inside the product list\r\n        let addToCartButton = Array.from(this.pageRenderer.document.getElementsByClassName('product-button'));\r\n        let cartNotification = this.pageRenderer.document.getElementById('product-counter');\r\n        addToCartButton.forEach((button) => {\r\n            button.addEventListener('click', () => {\r\n                let id = button.dataset.id;\r\n                let cart = this.pageRenderer.store.cart;\r\n                let catalog = this.pageRenderer.getProductsCatalog();\r\n                let product = catalog.findById(+id);\r\n                console.log(product);\r\n                //Adds object Product to current Cart\r\n                cart.addProduct(product);\r\n                cartNotification.innerHTML = cart.counter.toString();\r\n                this.updatePage();\r\n            });\r\n        });\r\n    }\r\n    loadEventBehavior() {\r\n        this.renderProductList();\r\n        this.addToCartNotification();\r\n        this.sortProductList();\r\n    }\r\n}\r\n","export default class RegistrationPage {\r\n    constructor(controller) {\r\n        this.content = `\r\n        <form action = \"/\" method = \"GET\" id = \"form\" class=\"form d-flex\">\r\n            <ul class=\"registration-container\">\r\n                <li>\r\n                    <label for=\"first-name\">First Name</label>\r\n                    <input type=\"text\" id=\"First-name\" placeholder=\"Enter your first name here\" required>\r\n                </li>\r\n\r\n                <li>\r\n                    <label for=\"last-name\">Last Name</label>\r\n                    <input type=\"text\" id=\"Last-name\" placeholder=\"Enter your last name here\" required>\r\n                </li>\r\n\r\n                <li>\r\n                    <label for=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"Email\" placeholder=\"Enter your email here\" required>\r\n                </li>\r\n\r\n                <li>\r\n                    <label for=\"phone\">Phone</label>\r\n                    <input type=\"tel\" id=\"Phone\" placeholder=\"Enter your phone here\" required>\r\n                </li>\r\n\r\n                <li>\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"Password\" placeholder=\"Enter your password here\" required>\r\n                </li>\r\n\r\n                <li>\r\n                    <label for=\"repeatPassword\">Repeat Password</label>\r\n                    <input type=\"password\" id=\"repeatPassword\" placeholder=\"Enter your password here\" required>\r\n                </li>\r\n                \r\n                <li>\r\n                    <button type=\"submit\">Submit</button>\r\n                </li>\r\n            </ul>\r\n            <div id= \"formError\" class = \"formError\">\r\n\r\n            <div>\r\n        </form>`;\r\n        this.controller = controller;\r\n    }\r\n    render() {\r\n        return this.content;\r\n    }\r\n    validateFormInput(input, messages) {\r\n        input.forEach(inputString => {\r\n            if (inputString.value.length >= 30) {\r\n                messages.push(inputString.id + \" must be less than 30 characters\");\r\n            }\r\n            else if (inputString.value.length <= 6) {\r\n                messages.push(inputString.id + \" must be longer than 6 characters\");\r\n            }\r\n        });\r\n    }\r\n    validatePasswordInput(pass1, pass2, messages) {\r\n        if (pass1 != pass2) {\r\n            messages.push(\"Passwords must match\");\r\n        }\r\n        else if (pass1 == \"password\" || pass2 == \"password\") {\r\n            messages.push(\"Password cant be 'password'\");\r\n        }\r\n    }\r\n    loadEventBehavior() {\r\n        let firstName = document.getElementById(\"First-name\");\r\n        let lastName = document.getElementById(\"Last-name\");\r\n        let email = document.getElementById(\"Email\");\r\n        let phone = document.getElementById(\"Phone\");\r\n        let password = document.getElementById(\"Password\");\r\n        let repeatPassword = document.getElementById(\"repeatPassword\");\r\n        let form = document.getElementById(\"form\");\r\n        let error = document.getElementById(\"formError\");\r\n        let inputArray = [firstName, lastName, email, phone];\r\n        form === null || form === void 0 ? void 0 : form.addEventListener('submit', (e) => {\r\n            let messages = [];\r\n            this.validateFormInput(inputArray, messages);\r\n            this.validatePasswordInput(password.value, repeatPassword.value, messages);\r\n            if (messages.length > 0) {\r\n                e.preventDefault();\r\n                error.innerHTML = messages.join(', ');\r\n            }\r\n        });\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport PageRenderer from \"./pageController/PageRenderer\";\r\nimport Store from \"./classModel/Store\";\r\n//console.log(catalog);\r\n/*window.onload = function() {\r\n    pageRenderer.fetchStoreProducts();\r\n    //pageRenderer.renderHomePage();\r\n    pageRenderer.renderPages();\r\n  };*/\r\ndocument.addEventListener(\"DOMContentLoaded\", () => __awaiter(void 0, void 0, void 0, function* () {\r\n    let store = new Store;\r\n    let pageRenderer = new PageRenderer(document, store);\r\n    pageRenderer.fetchStoreProducts();\r\n    pageRenderer.renderPages();\r\n}));\r\n// no funciona ninguno de los dos incluyendo los diferentes renderHomepages a mimirrrrr\r\n"],"names":[],"sourceRoot":""}